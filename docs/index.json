[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/component_index.js",
    "content": "/** @ignore */\nclass ComponentIndex {\n\tconstructor(entities) {\n\t\tthis.clear(entities)\n\t}\n\n\t// Removes everything from the index\n\tclear(entities) {\n\t\tthis.entities = entities\n\t\tthis.index = {}\n\t}\n\n\t// Uses an existing index or builds a new index, to return entities with the specified components\n\tquery(componentNames) {\n\t\tlet hash = this.hashComponents(componentNames)\n\n\t\tif (hash in this.index) {\n\t\t\treturn this.index[hash].entities\n\t\t} else {\n\t\t\treturn this.build(hash, componentNames).entities\n\t\t}\n\t}\n\n\t// Creates a hash from an array of component names\n\thashComponents(names) {\n\t\treturn JSON.stringify(names.concat().sort())\n\t}\n\n\t// Builds an initial index for a set of components\n\t// These indexes are expected to be updated when doing entity/component operations\n\tbuild(hash, componentNames) {\n\t\tlet matchingEntities = new Map()\n\n\t\tfor (const [entityId, entity] of this.entities) {\n\t\t\t// Ensure entity contains all specified components\n\t\t\tif (entity.has(...componentNames)) {\n\t\t\t\t// Add entity to index\n\t\t\t\tmatchingEntities.set(entity.toString(), entity)\n\t\t\t}\n\t\t}\n\n\t\treturn this.index[hash] = {\n\t\t\tcomponents: new Set(componentNames),\n\t\t\tentities: matchingEntities\n\t\t}\n\t}\n\n\t// Generic way to apply an operation to matching component groups\n\tapply(componentNames, callback) {\n\t\tfor (let hash in this.index) {\n\t\t\tlet group = this.index[hash]\n\n\t\t\t// Check if index group has any of the components that the entity has\n\t\t\tlet hasAny = componentNames.some(name => group.components.has(name))\n\n\t\t\t// Check if the current index group is supposed to match all entities\n\t\t\tlet isMatchAllGroup = ((componentNames == undefined || componentNames.length === 0) && group.components.size == 0)\n\n\t\t\tif (hasAny || isMatchAllGroup) {\n\t\t\t\tcallback(group.entities)\n\t\t\t}\n\t\t}\n\t}\n\n\t// Update an entity in the index (for creating components)\n\tadd(entity, ...componentNames) {\n\t\tthis.apply(componentNames, entities => {\n\t\t\tentities.set(entity.toString(), entity)\n\t\t})\n\t}\n\n\t// Update an entity in the index (for removing components)\n\tremove(entity, ...componentNames) {\n\t\tthis.apply(componentNames, entities => {\n\t\t\tentities.delete(entity.toString())\n\t\t})\n\t}\n\n\t// Add an entity and all of its components to the index\n\taddEntity(entity) {\n\t\tthis.add(entity, ...Object.keys(entity.data))\n\t}\n\n\t// Remove an entity and all of its components from the index\n\tremoveEntity(entity) {\n\t\tthis.remove(entity, ...Object.keys(entity.data))\n\t}\n}\n\nexports.ComponentIndex = ComponentIndex\n",
    "static": true,
    "longname": "/srv/http/picoes/src/component_index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "ComponentIndex",
    "memberof": "src/component_index.js",
    "static": true,
    "longname": "src/component_index.js~ComponentIndex",
    "access": "public",
    "export": false,
    "importPath": "picoes/src/component_index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "ignore": true,
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/component_index.js~ComponentIndex",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component_index.js~ComponentIndex#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 51,
    "kind": "method",
    "name": "clear",
    "memberof": "src/component_index.js~ComponentIndex",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component_index.js~ComponentIndex#clear",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "entities",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "entities",
    "memberof": "src/component_index.js~ComponentIndex",
    "static": false,
    "longname": "src/component_index.js~ComponentIndex#entities",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "index",
    "memberof": "src/component_index.js~ComponentIndex",
    "static": false,
    "longname": "src/component_index.js~ComponentIndex#index",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "method",
    "name": "query",
    "memberof": "src/component_index.js~ComponentIndex",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component_index.js~ComponentIndex#query",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "componentNames",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "hashComponents",
    "memberof": "src/component_index.js~ComponentIndex",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component_index.js~ComponentIndex#hashComponents",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "names",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "method",
    "name": "build",
    "memberof": "src/component_index.js~ComponentIndex",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component_index.js~ComponentIndex#build",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "hash",
        "types": [
          "*"
        ]
      },
      {
        "name": "componentNames",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "apply",
    "memberof": "src/component_index.js~ComponentIndex",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component_index.js~ComponentIndex#apply",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [
      {
        "name": "componentNames",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 58,
    "kind": "method",
    "name": "add",
    "memberof": "src/component_index.js~ComponentIndex",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component_index.js~ComponentIndex#add",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "params": [
      {
        "name": "entity",
        "types": [
          "*"
        ]
      },
      {
        "name": "componentNames",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "remove",
    "memberof": "src/component_index.js~ComponentIndex",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component_index.js~ComponentIndex#remove",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "params": [
      {
        "name": "entity",
        "types": [
          "*"
        ]
      },
      {
        "name": "componentNames",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "addEntity",
    "memberof": "src/component_index.js~ComponentIndex",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component_index.js~ComponentIndex#addEntity",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "params": [
      {
        "name": "entity",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "removeEntity",
    "memberof": "src/component_index.js~ComponentIndex",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component_index.js~ComponentIndex#removeEntity",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "params": [
      {
        "name": "entity",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 62,
    "kind": "file",
    "name": "src/entity.js",
    "content": "/** @ignore */\nconst { invoke } = require('./utilities.js')\n\n/**\n * Entity class used for storing components.\n *\n * @class      Entity (name)\n */\nclass Entity {\n\t/**\n\t * Do not construct an Entity yourself - use the entity() method in World instead.\n\t * Also, do not shallow/deep copy entity objects, only pass around references.\n\t *\n\t * @private\n\t *\n\t * @param {World}  world - The world\n\t * @param {number} id    - The identifier\n\t */\n\tconstructor(world, id) {\n\t\t/** @ignore */\n\t\tthis.world = world\n\n\t\t/** @ignore */\n\t\tthis._id = id\n\n\t\t/** @ignore */\n\t\tthis.data = {}\n\n\t\t// Add to the index, to update match all index\n\t\tif (this.valid()) {\n\t\t\tthis.world.index.add(this)\n\t\t}\n\t}\n\n\t/**\n\t * Return the entity ID.\n\t *\n\t * @return {number} Integer entity ID\n\t */\n\tget id() {\n\t\treturn this._id\n\t}\n\n\t/**\n\t * ID is read-only, attempting to set it will throw an error.\n\t *\n\t * @private\n\t */\n\tset id(id) {\n\t\tthrow new Error('Cannot set entity id')\n\t}\n\n\t/**\n\t * Returns true if the entity has ALL of the specified component names.\n\t * Additional components that the entity has, which are not specified in has(), will be ignored.\n\t * If no component names are specified, this method returns true.\n\t *\n\t * @example\n\t * if (entity.has('position', 'velocity')) {...}\n\t *\n\t * @param {...string} [components] - The component names to check for\n\t *\n\t * @return {boolean} true or false\n\t */\n\thas(...components) {\n\t\treturn components.every(name => name in this.data)\n\t}\n\n\t/**\n\t * Returns a component by name, or undefined if it doesn't exist\n\t *\n\t * @example\n\t * let position = entity.get('position')\n\t *\n\t * @param {string} component - The component name to get\n\t *\n\t * @return {Object} The component if defined, otherwise undefined\n\t */\n\tget(component) {\n\t\treturn this.data[component]\n\t}\n\n\t/**\n\t * Returns a component by name (automatically created if it doesn't exist)\n\t *\n\t * @example\n\t * let position = entity.access('position', 3, 4)\n\t *\n\t * @param {string}    component - The component name to create/get\n\t * @param {...Object} [args]    - The arguments to forward to create the new component, only if it doesn't exist.\n\t *\n\t * @return {Object} Always returns either the existing component, or the newly created one.\n\t */\n\taccess(component, ...args) {\n\t\tif (!this.has(component)) {\n\t\t\tthis.set(component, ...args)\n\t\t}\n\t\treturn this.data[component]\n\t}\n\n\t/**\n\t * Adds a new component, or re-creates and overwrites an existing component\n\t *\n\t * @example\n\t * entity.set('position', 1, 2)\n\t *\n\t * @example\n\t * entity.set('anonymousComponent', { keys: 'values' })\n\t *\n\t * @example\n\t * entity.set('anotherAnonymousComponent', 'Any type of any value')\n\t *\n\t * @param {string}    component - The component name to create. If there is a registered component for this name, then\n\t * its constructor will be called and an object of that type will be created.\n\t * @param {...Object} [args]    - The arguments to forward to the registered component type. If the component type is\n\t * registered, then only the first additional argument will be used as the value of the entire component.\n\t *\n\t * @return {Object} The original entity that set() was called on, so that operations can be chained.\n\t */\n\tset(component, ...args) {\n\t\tif (this.valid() && component in this.world.components) {\n\t\t\t// Use defined component template, passing entity as first parameter\n\t\t\tthis.data[component] = new this.world.components[component](this, ...args)\n\t\t} else if (args.length > 0) {\n\t\t\t// Use first argument as component value\n\t\t\tthis.data[component] = args[0]\n\t\t} else {\n\t\t\t// Make an empty object\n\t\t\tthis.data[component] = {}\n\t\t}\n\n\t\t// Update the index with this new component\n\t\tif (this.valid()) {\n\t\t\tthis.world.index.add(this, component)\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Updates component data from an object or other component. Similar to access() with a shallow merge applied after.\n\t *\n\t * @example\n\t * entity.update('position', { x: 1, y: 2 })\n\t *\n\t * @param {string} component - The component name to update\n\t * @param {Object} data      - The object or other component to merge into the specified component.\n\t *\n\t * @return {Object} The original entity that update() was called on, so that operations can be chained.\n\t */\n\tupdate(component, data) {\n\t\tlet comp = this.access(component)\n\n\t\t// Shallow set keys of the component\n\t\tfor (let key in data) {\n\t\t\tcomp[key] = data[key]\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Removes a component from the entity - has no effect when it doesn't exist.\n\t * Can specify an onRemove() method in your component which gets called before it is removed.\n\t * If nothing is specified, then nothing will be removed. Use removeAll() to remove all components.\n\t *\n\t * @example\n\t * entity.remove('position')\n\t *\n\t * @param {...string} [components] - The component names to remove from the entity.\n\t *\n\t * @return {Object} The original entity that remove() was called on, so that operations can be chained.\n\t */\n\tremove(...components) {\n\t\tfor (let component of components) {\n\t\t\tif (component in this.data) {\n\n\t\t\t\t// Remove from index\n\t\t\t\tif (this.valid()) {\n\t\t\t\t\tthis.world.index.remove(this, component)\n\t\t\t\t}\n\n\t\t\t\t// Call custom onRemove\n\t\t\t\tinvoke(this.data[component], 'onRemove')\n\n\t\t\t\tdelete this.data[component]\n\t\t\t}\n\t\t}\n\t\treturn this\n\t}\n\n\t// Remove all components\n\n\t/**\n\t * Removes all components from the entity.\n\t *\n\t * @example\n\t * entity.removeAll()\n\t *\n\t * @return {Object} The original entity that removeAll() was called on, so that operations can be chained.\n\t */\n\tremoveAll() {\n\t\tthis.remove(...Object.keys(this.data))\n\t\tthis.data = {}\n\t\treturn this\n\t}\n\n\t/**\n\t * Remove this entity and all of its components from the world. After an entity is destroyed, the object should be discarded,\n\t * and it is recommended to avoid re-using it.\n\t *\n\t * @example\n\t * entity.destroy()\n\t */\n\tdestroy() {\n\t\tthis.removeAll()\n\n\t\tif (this.valid()) {\n\t\t\t// Remove from the index, to update match all index\n\t\t\tthis.world.index.remove(this)\n\n\t\t\t// Remove from world\n\t\t\tthis.world.entities.delete(this._id)\n\t\t\tthis._id = undefined\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if this is a valid, existing, and usable entity, which is attached to a world.\n\t *\n\t * @example\n\t * if (entity.valid()) {...}\n\t *\n\t * @return {boolean} true or false\n\t */\n\tvalid() {\n\t\t// Note: No need to actually look in the world for the ID, if entities are only ever copied by reference.\n\t\t// If entities are ever deep/shallow copied, this function will need to check this to be more robust.\n\t\treturn this.world && this._id !== undefined\n\t}\n\n\t/**\n\t * Returns unique entity ID as a string.\n\t *\n\t * @example\n\t * let entityId = entity.toString()\n\t *\n\t * @return {string} String representation of the entity ID.\n\t */\n\ttoString() {\n\t\treturn String(this._id)\n\t}\n\n\t/**\n\t * Serializes entire entity and components to JSON.\n\t * Note: Defining toJSON methods in your components will override the built-in behavior.\n\t *\n\t * @example\n\t * let serializedEntity = entity.toJSON()\n\t *\n\t * @return {string} JSON encoded string\n\t */\n\ttoJSON() {\n\t\treturn JSON.stringify(this.data)\n\t}\n\n\t/**\n\t * Deserializes data from JSON, creating new components and overwriting existing components.\n\t * Note: Defining fromJSON methods in your components will override the built-in behavior.\n\t *\n\t * @example\n\t * entity.fromJSON(serializedEntity)\n\t *\n\t * @param {string} data - A JSON string containing component data to parse, and store in this entity.\n\t *\n\t * @return {Object} The original entity that fromJSON() was called on, so that operations can be chained.\n\t */\n\tfromJSON(data) {\n\t\tlet parsed = JSON.parse(data)\n\t\tfor (let name in parsed) {\n\t\t\tlet comp = this.access(name)\n\n\t\t\t// Either call custom method or copy all properties\n\t\t\tif (typeof comp.fromJSON === 'function') {\n\t\t\t\tcomp.fromJSON(parsed[name])\n\t\t\t} else {\n\t\t\t\tthis.update(name, parsed[name])\n\t\t\t}\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * Attaches a currently detached entity back to a world.\n\t * Note: Do not use detached entities, get() may be safe, but avoid calling other methods\n\t * Note: The ID will be reassigned, so do not rely on this\n\t *\n\t * @example\n\t * entity.attach(world)\n\t *\n\t * @param {World} world - The world to attach this entity to\n\t */\n\tattach(world) {\n\t\tif (world && !this.valid()) {\n\t\t\t// Assign new id, and reattach to world\n\t\t\tthis.world = world\n\t\t\tthis._id = this.world.idCounter++\n\t\t\tthis.world.entities.set(this._id, this)\n\t\t\tthis.world.index.addEntity(this)\n\t\t}\n\t}\n\n\t/**\n\t * Removes this entity from the current world, without removing any components or data.\n\t * It can be re-attached to another world (or the same world), using the attach() method.\n\t * Note: Do not use detached entities, get() may be safe, but avoid calling other methods\n\t * Note: The ID will be reassigned, so do not rely on this\n\t *\n\t * @example\n\t * entity.detach()\n\t */\n\tdetach() {\n\t\tif (this.valid()) {\n\t\t\t// Remove from current world\n\t\t\tthis.world.index.removeEntity(this)\n\t\t\tthis.world.entities.delete(this._id)\n\t\t\tthis._id = undefined\n\t\t\tthis.world = undefined\n\t\t}\n\t}\n}\n\nexports.Entity = Entity\n",
    "static": true,
    "longname": "/srv/http/picoes/src/entity.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 63,
    "kind": "variable",
    "name": "invoke",
    "memberof": "src/entity.js",
    "static": true,
    "longname": "src/entity.js~invoke",
    "access": "public",
    "export": false,
    "importPath": "picoes/src/entity.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "class",
    "name": "Entity",
    "memberof": "src/entity.js",
    "static": true,
    "longname": "src/entity.js~Entity",
    "access": "public",
    "export": false,
    "importPath": "picoes/src/entity.js",
    "importStyle": null,
    "description": "Entity class used for storing components.",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "     Entity (name)"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 65,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/entity.js~Entity#constructor",
    "access": "private",
    "description": "Do not construct an Entity yourself - use the entity() method in World instead.\nAlso, do not shallow/deep copy entity objects, only pass around references.",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "World"
        ],
        "spread": false,
        "optional": false,
        "name": "world",
        "description": "The world"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The identifier"
      }
    ]
  },
  {
    "__docId__": 66,
    "kind": "member",
    "name": "world",
    "memberof": "src/entity.js~Entity",
    "static": false,
    "longname": "src/entity.js~Entity#world",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "member",
    "name": "_id",
    "memberof": "src/entity.js~Entity",
    "static": false,
    "longname": "src/entity.js~Entity#_id",
    "access": "private",
    "description": null,
    "lineNumber": 24,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "member",
    "name": "data",
    "memberof": "src/entity.js~Entity",
    "static": false,
    "longname": "src/entity.js~Entity#data",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "ignore": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "get",
    "name": "id",
    "memberof": "src/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/entity.js~Entity#id",
    "access": "public",
    "description": "Return the entity ID.",
    "lineNumber": 40,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Integer entity ID"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "set",
    "name": "id",
    "memberof": "src/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/entity.js~Entity#id",
    "access": "private",
    "description": "ID is read-only, attempting to set it will throw an error.",
    "lineNumber": 49
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "has",
    "memberof": "src/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/entity.js~Entity#has",
    "access": "public",
    "description": "Returns true if the entity has ALL of the specified component names.\nAdditional components that the entity has, which are not specified in has(), will be ignored.\nIf no component names are specified, this method returns true.",
    "examples": [
      "if (entity.has('position', 'velocity')) {...}"
    ],
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "...string"
        ],
        "spread": true,
        "optional": true,
        "name": "components",
        "description": "The component names to check for"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true or false"
    }
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "get",
    "memberof": "src/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/entity.js~Entity#get",
    "access": "public",
    "description": "Returns a component by name, or undefined if it doesn't exist",
    "examples": [
      "let position = entity.get('position')"
    ],
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "component",
        "description": "The component name to get"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The component if defined, otherwise undefined"
    }
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "access",
    "memberof": "src/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/entity.js~Entity#access",
    "access": "public",
    "description": "Returns a component by name (automatically created if it doesn't exist)",
    "examples": [
      "let position = entity.access('position', 3, 4)"
    ],
    "lineNumber": 94,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "component",
        "description": "The component name to create/get"
      },
      {
        "nullable": null,
        "types": [
          "...Object"
        ],
        "spread": true,
        "optional": true,
        "name": "args",
        "description": "The arguments to forward to create the new component, only if it doesn't exist."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Always returns either the existing component, or the newly created one."
    }
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "set",
    "memberof": "src/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/entity.js~Entity#set",
    "access": "public",
    "description": "Adds a new component, or re-creates and overwrites an existing component",
    "examples": [
      "entity.set('position', 1, 2)",
      "entity.set('anonymousComponent', { keys: 'values' })",
      "entity.set('anotherAnonymousComponent', 'Any type of any value')"
    ],
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "component",
        "description": "The component name to create. If there is a registered component for this name, then\nits constructor will be called and an object of that type will be created."
      },
      {
        "nullable": null,
        "types": [
          "...Object"
        ],
        "spread": true,
        "optional": true,
        "name": "args",
        "description": "The arguments to forward to the registered component type. If the component type is\nregistered, then only the first additional argument will be used as the value of the entire component."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The original entity that set() was called on, so that operations can be chained."
    }
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "update",
    "memberof": "src/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/entity.js~Entity#update",
    "access": "public",
    "description": "Updates component data from an object or other component. Similar to access() with a shallow merge applied after.",
    "examples": [
      "entity.update('position', { x: 1, y: 2 })"
    ],
    "lineNumber": 151,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "component",
        "description": "The component name to update"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The object or other component to merge into the specified component."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The original entity that update() was called on, so that operations can be chained."
    }
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "remove",
    "memberof": "src/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/entity.js~Entity#remove",
    "access": "public",
    "description": "Removes a component from the entity - has no effect when it doesn't exist.\nCan specify an onRemove() method in your component which gets called before it is removed.\nIf nothing is specified, then nothing will be removed. Use removeAll() to remove all components.",
    "examples": [
      "entity.remove('position')"
    ],
    "lineNumber": 174,
    "params": [
      {
        "nullable": null,
        "types": [
          "...string"
        ],
        "spread": true,
        "optional": true,
        "name": "components",
        "description": "The component names to remove from the entity."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The original entity that remove() was called on, so that operations can be chained."
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "removeAll",
    "memberof": "src/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/entity.js~Entity#removeAll",
    "access": "public",
    "description": "Removes all components from the entity.",
    "examples": [
      "entity.removeAll()"
    ],
    "lineNumber": 202,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The original entity that removeAll() was called on, so that operations can be chained."
    },
    "params": []
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "destroy",
    "memberof": "src/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/entity.js~Entity#destroy",
    "access": "public",
    "description": "Remove this entity and all of its components from the world. After an entity is destroyed, the object should be discarded,\nand it is recommended to avoid re-using it.",
    "examples": [
      "entity.destroy()"
    ],
    "lineNumber": 215,
    "params": [],
    "return": null
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "valid",
    "memberof": "src/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/entity.js~Entity#valid",
    "access": "public",
    "description": "Returns true if this is a valid, existing, and usable entity, which is attached to a world.",
    "examples": [
      "if (entity.valid()) {...}"
    ],
    "lineNumber": 236,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true or false"
    },
    "params": []
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "toString",
    "memberof": "src/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/entity.js~Entity#toString",
    "access": "public",
    "description": "Returns unique entity ID as a string.",
    "examples": [
      "let entityId = entity.toString()"
    ],
    "lineNumber": 250,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "String representation of the entity ID."
    },
    "params": []
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "toJSON",
    "memberof": "src/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/entity.js~Entity#toJSON",
    "access": "public",
    "description": "Serializes entire entity and components to JSON.\nNote: Defining toJSON methods in your components will override the built-in behavior.",
    "examples": [
      "let serializedEntity = entity.toJSON()"
    ],
    "lineNumber": 263,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "JSON encoded string"
    },
    "params": []
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "fromJSON",
    "memberof": "src/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/entity.js~Entity#fromJSON",
    "access": "public",
    "description": "Deserializes data from JSON, creating new components and overwriting existing components.\nNote: Defining fromJSON methods in your components will override the built-in behavior.",
    "examples": [
      "entity.fromJSON(serializedEntity)"
    ],
    "lineNumber": 278,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "A JSON string containing component data to parse, and store in this entity."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The original entity that fromJSON() was called on, so that operations can be chained."
    }
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "attach",
    "memberof": "src/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/entity.js~Entity#attach",
    "access": "public",
    "description": "Attaches a currently detached entity back to a world.\nNote: Do not use detached entities, get() may be safe, but avoid calling other methods\nNote: The ID will be reassigned, so do not rely on this",
    "examples": [
      "entity.attach(world)"
    ],
    "lineNumber": 303,
    "params": [
      {
        "nullable": null,
        "types": [
          "World"
        ],
        "spread": false,
        "optional": false,
        "name": "world",
        "description": "The world to attach this entity to"
      }
    ],
    "return": null
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "detach",
    "memberof": "src/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/entity.js~Entity#detach",
    "access": "public",
    "description": "Removes this entity from the current world, without removing any components or data.\nIt can be re-attached to another world (or the same world), using the attach() method.\nNote: Do not use detached entities, get() may be safe, but avoid calling other methods\nNote: The ID will be reassigned, so do not rely on this",
    "examples": [
      "entity.detach()"
    ],
    "lineNumber": 322,
    "params": [],
    "return": null
  },
  {
    "__docId__": 91,
    "kind": "file",
    "name": "src/utilities.js",
    "content": "/**\n * Utility function for invoking methods inside objects, binding \"this\" to the object.\n *\n * @ignore\n *\n * @param {Object}   object - The object\n * @param {Function} method - The method\n * @param {Array}    args   - The arguments\n *\n * @return {Object} Returns what the called method returns\n */\nfunction invoke(object, method, ...args) {\n\tif (object && typeof object[method] === 'function') {\n\t\treturn object[method].call(object, ...args)\n\t}\n}\n\n/**\n * Determines if function.\n *\n * @ignore\n */\nfunction isFunction(obj) {\n\treturn typeof obj === 'function'\n}\n\nexports.invoke = invoke\nexports.isFunction = isFunction\n",
    "static": true,
    "longname": "/srv/http/picoes/src/utilities.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 92,
    "kind": "function",
    "name": "invoke",
    "memberof": "src/utilities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilities.js~invoke",
    "access": "public",
    "export": false,
    "importPath": "picoes/src/utilities.js",
    "importStyle": null,
    "description": "Utility function for invoking methods inside objects, binding \"this\" to the object.",
    "lineNumber": 12,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "The object"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "method",
        "description": "The method"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "The arguments"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Returns what the called method returns"
    }
  },
  {
    "__docId__": 93,
    "kind": "function",
    "name": "isFunction",
    "memberof": "src/utilities.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utilities.js~isFunction",
    "access": "public",
    "export": false,
    "importPath": "picoes/src/utilities.js",
    "importStyle": null,
    "description": "Determines if function.",
    "lineNumber": 23,
    "ignore": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "file",
    "name": "src/world.js",
    "content": "/** @ignore */\nconst { invoke, isFunction } = require('./utilities.js')\n\n/** @ignore */\nconst { Entity } = require('./entity.js')\n\n/** @ignore */\nconst { ComponentIndex } = require('./component_index.js')\n\n/**\n * Class for world.\n *\n * @class      World (name)\n */\nclass World {\n\t/**\n\t * Constructs an instance of the world.\n\t */\n\tconstructor() {\n\t\t/** @ignore */\n\t\tthis.systems = []\n\n\t\t/**\n\t\t * Maps entity IDs to entities\n\t\t * @ignore\n\t\t */\n\t\tthis.entities = new Map()\n\n\t\t/** @ignore */\n\t\tthis.components = {}\n\n\t\t/** @ignore */\n\t\tthis.entityTemplates = {}\n\n\t\t/** @ignore */\n\t\tthis.idCounter = 1\n\n\t\t/**\n\t\t * Maps entire queries to arrays of entities\n\t\t * @ignore\n\t\t */\n\t\tthis.index = new ComponentIndex(this.entities)\n\t}\n\n\t/**\n\t * Removes all entities from the world.\n\t * Does not affect registered systems, components, or prototypes.\n\t *\n\t * @example\n\t * world.clear()\n\t */\n\tclear() {\n\t\t// Call onRemove on all components of all entities\n\t\tfor (const [entityId, entity] of this.entities) {\n\t\t\tfor (let componentName in entity.data) {\n\t\t\t\t// Get component, and call onRemove if it exists as a function\n\t\t\t\tlet component = entity.data[componentName]\n\t\t\t\tinvoke(component, 'onRemove')\n\t\t\t}\n\t\t}\n\n\t\t// Clear entities\n\t\tthis.entities = new Map()\n\t\tthis.index.clear(this.entities)\n\t}\n\n\t/**\n\t * Registers a component type to the world. Components must be constructable. They are passed the entity first,\n\t * then the rest of the arguments from methods like entity.set(). Components also can have an onRemove() method.\n\t *\n\t * @param {string}   name           - The name\n\t * @param {function} componentClass - The component class, must be a constructable class or function\n\t *\n\t * @example\n\t * world.component('myComponent', class {\n\t *     constructor(entity, some, args) {\n\t *         this.entity = entity\n\t *         this.some = some\n\t *         this.args = args\n\t *     }\n\t * })\n\t * // entity === the new entity object\n\t * // some === 10\n\t * // args === 500\n\t * world.entity().set('myComponent', 10, 500)\n\t *\n\t * @return {string} Registered component name on success, undefined on failure\n\t */\n\tcomponent(name, componentClass) {\n\t\t// Only allow functions and classes to be components\n\t\tif (isFunction(componentClass)) {\n\t\t\tthis.components[name] = componentClass\n\t\t\treturn name\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new entity in the world\n\t *\n\t * @param {string} [name] - The prototype name to use\n\t *\n\t * @example\n\t * world.entity()\n\t *\n\t * @example\n\t * world.entity('Player')\n\t *\n\t * @return {Entity} The new entity created\n\t */\n\tentity(name) {\n\t\tlet entityId = this.idCounter++\n\t\tlet entity = new Entity(this, entityId)\n\n\t\t// Use 'name' to get prototype data (if specified)\n\t\tif (name && name in this.entityTemplates) {\n\t\t\t// Add all components from prototype\n\t\t\tlet template = this.entityTemplates[name]\n\t\t\tfor (let componentName in template) {\n\t\t\t\t// Update component with data from template\n\t\t\t\tlet newComponentData = JSON.parse(template[componentName])\n\t\t\t\tentity.update(componentName, newComponentData)\n\t\t\t}\n\t\t}\n\n\t\tthis.entities.set(entityId, entity)\n\t\treturn entity\n\t}\n\n\t/**\n\t * Registers a system to the world.\n\t * The order the systems get registered, is the order then run in.\n\t *\n\t * @example\n\t * // Movement system\n\t * world.system(['position', 'velocity'], class {\n\t *      every(position, velocity, entity) {\n\t *          position.x += velocity.x\n\t *          position.y += velocity.y\n\t *      }\n\t *  })\n\t *\n\t * @param {Array}     components  - The list of components the system will process in every(). This follows the same logic as entity.has() and world.every().\n\t * @param {Function}  systemClass - The system class to instantiate. Can contain the following methods: constructor, initialize,\n\t * pre, every, post. Pre() and post() get called before and after every(), for each of the independent systems. See world.run()\n\t * for an example of the call order.\n\t * @param {...Object} [args]      - The arguments to forward to the system's constructors\n\t *\n\t * @return {number} Unique ID of the system on success or undefined on failure\n\t */\n\tsystem(components, systemClass, ...args) {\n\t\t// TODO: Make components optional, and parameters more dynamic by only using ...args\n\t\tif (isFunction(systemClass)) {\n\t\t\t// Create the system, and set the component array query\n\t\t\tlet newSystem = new systemClass(...args)\n\t\t\tnewSystem.components = components\n\n\t\t\t// Add the system, return its ID\n\t\t\treturn this.systems.push(newSystem) - 1\n\t\t}\n\t\treturn undefined\n\t}\n\n\t/**\n\t * Calls initialize() on all systems\n\t *\n\t * @example\n\t * world.initialize(renderContext)\n\t *\n\t * @param {...Object} [args] - The arguments to forward to the systems' initialize() methods\n\t */\n\tinitialize(...args) {\n\t\tfor (let system of this.systems) {\n\t\t\tinvoke(system, 'initialize', ...args)\n\t\t}\n\t}\n\n\t/**\n\t * Calls pre(), every(), and post() on all systems\n\t *\n\t * @example\n\t * world.run(deltaTime)\n\t *\n\t * @example\n\t * // Example flow of method call order:\n\t * // Setup systems:\n\t * world.system([], systemA)\n\t * world.system([], systemB)\n\t * // During world.run():\n\t * // systemA.pre()\n\t * // systemA.every() * number of entities\n\t * // systemA.post()\n\t * // systemB.pre()\n\t * // systemB.every() * number of entities\n\t * // systemB.post()\n\t *\n\t * @param {...Object} [args] - The arguments to forward to the systems' methods\n\t */\n\trun(...args) {\n\t\tfor (let system of this.systems) {\n\t\t\tinvoke(system, 'pre', ...args)\n\n\t\t\t// Run the \"every\" method in the system\n\t\t\tif (isFunction(system.every)) {\n\t\t\t\tthis.every(system.components, system.every.bind(system), ...args)\n\t\t\t}\n\n\t\t\tinvoke(system, 'post', ...args)\n\t\t}\n\t}\n\n\t/**\n\t * Iterate through entities with the specified components\n\t *\n\t * @example\n\t * // Use a callback to process entities one-by-one\n\t * world.every(['comp'], comp => {comp.value = 0})\n\t *\n\t * @example\n\t * // Get an iterator for the entities\n\t * let it = world.every(['comp'])\n\t * for (let entity of it) {...}\n\t *\n\t * @param {Array}     componentNames - The component names to match entites with. This checks if the entity\n\t * has ALL of the specified components, but does not check for additional components.\n\t * @param {Function}  callback       - The callback to call for each entity. Takes (...components, entity, ...args).\n\t * @param {...Object} [args]         - Any additional arguments to pass to the callback.\n\t *\n\t * @return {MapIterator} An iterator to the entities themselves\n\t */\n\tevery(componentNames, callback, ...args) {\n\t\t// Get indexed map of entities\n\t\tlet entities = this.index.query(componentNames)\n\n\t\tif (isFunction(callback)) {\n\t\t\t// Go through the map of entities\n\t\t\tfor (let entity of entities.values()) {\n\t\t\t\t// At this point, we can safely assume that all components exist, even if entities/components\n\t\t\t\t// are deleted/modified during the loop, because JavaScript's MapIterator is smart enough.\n\n\t\t\t\t// Get all components as an array\n\t\t\t\tlet components = componentNames.map(name => entity.get(name))\n\n\t\t\t\t// Pass components, then the main entity, then any additional arguments\n\t\t\t\tlet status = callback(...components, entity, ...args)\n\n\t\t\t\t// Stop the iteration when the callback returns false\n\t\t\t\tif (status === false) {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn entities.values()\n\t}\n\n\t/**\n\t * Returns an array of entities with matching components\n\t * Simplified version of every(), returns an actual array, and only takes component names as arguments.\n\t *\n\t * @example\n\t * world.get('player', 'sprite')\n\t *\n\t * @param {Array} componentNames - The component names to match on. See every() for how this matches.\n\t *\n\t * @return {Array} Array of entities, instead of iterator like every().\n\t */\n\tget(...componentNames) {\n\t\treturn [...this.every(componentNames)]\n\t}\n\n\t/**\n\t * Registers entity prototype(s). Any existing prototype names that are the same will be overwritten\n\t *\n\t * @example\n\t * world.prototype({\n\t *     Movable: {\n\t *         position: {},\n\t *         velocity: {}\n\t *     }\n\t * })\n\t *\n\t * @param {Object} data - Object structure to register as a prototype. Should be a dictionary with the top level keys\n\t * being the prototype names. Can also be a JSON formatted string.\n\t *\n\t * @return {number} Number of prototypes added.\n\t */\n\tprototype(data) {\n\t\tlet count = 0\n\n\t\t// Convert to an object when given a string\n\t\tif (typeof data === 'string') {\n\t\t\tdata = JSON.parse(data)\n\t\t}\n\n\t\t// Data must be an object at this point\n\t\tif (typeof data === 'object') {\n\t\t\t// Iterate through prototype names\n\t\t\tfor (let protoName in data) {\n\t\t\t\tlet inputObject = data[protoName]\n\t\t\t\tlet protoObject = {}\n\t\t\t\t// Iterate through component names\n\t\t\t\tfor (let compName in inputObject) {\n\t\t\t\t\t// Store strings of each component\n\t\t\t\t\tprotoObject[compName] = JSON.stringify(inputObject[compName])\n\t\t\t\t}\n\t\t\t\tthis.entityTemplates[protoName] = protoObject\n\t\t\t\t++count\n\t\t\t}\n\t\t}\n\n\t\treturn count\n\t}\n}\n\nexports.World = World\n",
    "static": true,
    "longname": "/srv/http/picoes/src/world.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "name": "invoke",
    "memberof": "src/world.js",
    "static": true,
    "longname": "src/world.js~invoke",
    "access": "public",
    "export": false,
    "importPath": "picoes/src/world.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "variable",
    "name": "Entity",
    "memberof": "src/world.js",
    "static": true,
    "longname": "src/world.js~Entity",
    "access": "public",
    "export": false,
    "importPath": "picoes/src/world.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 97,
    "kind": "variable",
    "name": "ComponentIndex",
    "memberof": "src/world.js",
    "static": true,
    "longname": "src/world.js~ComponentIndex",
    "access": "public",
    "export": false,
    "importPath": "picoes/src/world.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "class",
    "name": "World",
    "memberof": "src/world.js",
    "static": true,
    "longname": "src/world.js~World",
    "access": "public",
    "export": false,
    "importPath": "picoes/src/world.js",
    "importStyle": null,
    "description": "Class for world.",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "     World (name)"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 99,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/world.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/world.js~World#constructor",
    "access": "public",
    "description": "Constructs an instance of the world.",
    "lineNumber": 19
  },
  {
    "__docId__": 100,
    "kind": "member",
    "name": "systems",
    "memberof": "src/world.js~World",
    "static": false,
    "longname": "src/world.js~World#systems",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "ignore": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 101,
    "kind": "member",
    "name": "entities",
    "memberof": "src/world.js~World",
    "static": false,
    "longname": "src/world.js~World#entities",
    "access": "public",
    "description": "Maps entity IDs to entities",
    "lineNumber": 27,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "member",
    "name": "components",
    "memberof": "src/world.js~World",
    "static": false,
    "longname": "src/world.js~World#components",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "ignore": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "member",
    "name": "entityTemplates",
    "memberof": "src/world.js~World",
    "static": false,
    "longname": "src/world.js~World#entityTemplates",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "ignore": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "member",
    "name": "idCounter",
    "memberof": "src/world.js~World",
    "static": false,
    "longname": "src/world.js~World#idCounter",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "ignore": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 105,
    "kind": "member",
    "name": "index",
    "memberof": "src/world.js~World",
    "static": false,
    "longname": "src/world.js~World#index",
    "access": "public",
    "description": "Maps entire queries to arrays of entities",
    "lineNumber": 42,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "clear",
    "memberof": "src/world.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/world.js~World#clear",
    "access": "public",
    "description": "Removes all entities from the world.\nDoes not affect registered systems, components, or prototypes.",
    "examples": [
      "world.clear()"
    ],
    "lineNumber": 52,
    "params": [],
    "return": null
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "component",
    "memberof": "src/world.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/world.js~World#component",
    "access": "public",
    "description": "Registers a component type to the world. Components must be constructable. They are passed the entity first,\nthen the rest of the arguments from methods like entity.set(). Components also can have an onRemove() method.",
    "examples": [
      "world.component('myComponent', class {\n    constructor(entity, some, args) {\n        this.entity = entity\n        this.some = some\n        this.args = args\n    }\n})\n// entity === the new entity object\n// some === 10\n// args === 500\nworld.entity().set('myComponent', 10, 500)"
    ],
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The name"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "componentClass",
        "description": "The component class, must be a constructable class or function"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Registered component name on success, undefined on failure"
    }
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "entity",
    "memberof": "src/world.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/world.js~World#entity",
    "access": "public",
    "description": "Creates a new entity in the world",
    "examples": [
      "world.entity()",
      "world.entity('Player')"
    ],
    "lineNumber": 110,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "The prototype name to use"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Entity"
      ],
      "spread": false,
      "description": "The new entity created"
    }
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "system",
    "memberof": "src/world.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/world.js~World#system",
    "access": "public",
    "description": "Registers a system to the world.\nThe order the systems get registered, is the order then run in.",
    "examples": [
      "// Movement system\nworld.system(['position', 'velocity'], class {\n     every(position, velocity, entity) {\n         position.x += velocity.x\n         position.y += velocity.y\n     }\n })"
    ],
    "lineNumber": 150,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "components",
        "description": "The list of components the system will process in every(). This follows the same logic as entity.has() and world.every()."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "systemClass",
        "description": "The system class to instantiate. Can contain the following methods: constructor, initialize,\npre, every, post. Pre() and post() get called before and after every(), for each of the independent systems. See world.run()\nfor an example of the call order."
      },
      {
        "nullable": null,
        "types": [
          "...Object"
        ],
        "spread": true,
        "optional": true,
        "name": "args",
        "description": "The arguments to forward to the system's constructors"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Unique ID of the system on success or undefined on failure"
    }
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "initialize",
    "memberof": "src/world.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/world.js~World#initialize",
    "access": "public",
    "description": "Calls initialize() on all systems",
    "examples": [
      "world.initialize(renderContext)"
    ],
    "lineNumber": 171,
    "params": [
      {
        "nullable": null,
        "types": [
          "...Object"
        ],
        "spread": true,
        "optional": true,
        "name": "args",
        "description": "The arguments to forward to the systems' initialize() methods"
      }
    ],
    "return": null
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "run",
    "memberof": "src/world.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/world.js~World#run",
    "access": "public",
    "description": "Calls pre(), every(), and post() on all systems",
    "examples": [
      "world.run(deltaTime)",
      "// Example flow of method call order:\n// Setup systems:\nworld.system([], systemA)\nworld.system([], systemB)\n// During world.run():\n// systemA.pre()\n// systemA.every() * number of entities\n// systemA.post()\n// systemB.pre()\n// systemB.every() * number of entities\n// systemB.post()"
    ],
    "lineNumber": 198,
    "params": [
      {
        "nullable": null,
        "types": [
          "...Object"
        ],
        "spread": true,
        "optional": true,
        "name": "args",
        "description": "The arguments to forward to the systems' methods"
      }
    ],
    "return": null
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "every",
    "memberof": "src/world.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/world.js~World#every",
    "access": "public",
    "description": "Iterate through entities with the specified components",
    "examples": [
      "// Use a callback to process entities one-by-one\nworld.every(['comp'], comp => {comp.value = 0})",
      "// Get an iterator for the entities\nlet it = world.every(['comp'])\nfor (let entity of it) {...}"
    ],
    "lineNumber": 230,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "componentNames",
        "description": "The component names to match entites with. This checks if the entity\nhas ALL of the specified components, but does not check for additional components."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback to call for each entity. Takes (...components, entity, ...args)."
      },
      {
        "nullable": null,
        "types": [
          "...Object"
        ],
        "spread": true,
        "optional": true,
        "name": "args",
        "description": "Any additional arguments to pass to the callback."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MapIterator"
      ],
      "spread": false,
      "description": "An iterator to the entities themselves"
    }
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "get",
    "memberof": "src/world.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/world.js~World#get",
    "access": "public",
    "description": "Returns an array of entities with matching components\nSimplified version of every(), returns an actual array, and only takes component names as arguments.",
    "examples": [
      "world.get('player', 'sprite')"
    ],
    "lineNumber": 267,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "componentNames",
        "description": "The component names to match on. See every() for how this matches."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "Array of entities, instead of iterator like every()."
    }
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "prototype",
    "memberof": "src/world.js~World",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/world.js~World#prototype",
    "access": "public",
    "description": "Registers entity prototype(s). Any existing prototype names that are the same will be overwritten",
    "examples": [
      "world.prototype({\n    Movable: {\n        position: {},\n        velocity: {}\n    }\n})"
    ],
    "lineNumber": 287,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Object structure to register as a prototype. Should be a dictionary with the top level keys\nbeing the prototype names. Can also be a JSON formatted string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Number of prototypes added."
    }
  },
  {
    "kind": "index",
    "content": "# PicoES\n\n[![Build Status](https://travis-ci.org/ayebear/picoes.svg?branch=master)](https://travis-ci.org/ayebear/picoes)\n\n### Table Of Contents\n\n* [About](#about)\n\t* [Features](#features)\n\t* [Terminology](#terminology)\n\t* [License](#license)\n\t* [Author](#author)\n* [Instructions](#instructions)\n\t* [Setup](#setup)\n\t* [Documentation](#documentation)\n\t* [Examples](#examples)\n\n## About\n\nPico Entity System for JavaScript (ES6+).\n\nRead up on what an ECS is here: [https://en.wikipedia.org/wiki/Entity_component_system](https://en.wikipedia.org/wiki/Entity_component_system)\n\nThis entity system is designed to be as simple as possible, while still having useful features.\n\n### Features\n\n* High performance, memoized entity queries\n\t* O(1) average time\n* All definitions are optional\n\t* Can create components and entities in a world and query on them, without needing to define structured systems and components\n* Strings as component keys\n\t* No need to manually track component keys like many libraries\n* JSON serialization\n\t* Useful for save data and networked applications\n* Prototypes\n\t* Allows entity definitions to be data-driven, outside of code\n\n### Terminology\n\n* **Component:** Holds some related data\n\t* Example: Position, Velocity, Health\n* **Entity:** Refers to a collection of components\n\t* Example: Position + Health could represent a player\n* **Prototype:** A template of components used for creating entities\n\t* Example: Player could contain Position, Velocity, and Health\n* **System:** Logic loop that processes entities\n\t* Example: Movement system which handles positions and velocities\n* **World:** Lets you register components, systems, and prototypes in a self-contained object - which avoids the use of singletons. This is also where you can create entities from.\n\n### License\n\nMIT\n\n### Author\n\nEric Hebert\n\n## Instructions\n\n### Setup\n\nYou'll normally want to install PicoES as a dev dependency, and have it transpiled into the build of your application.\n\n```bash\nnpm i -D picoes\n```\n\n### Documentation\n\n[PicoES Documentation](http://ayebear.com/picoes)\n\n### Examples\n\n#### Shorthand anonymous components and systems\n\n```javascript\n// import { World } from 'picoes'\nconst { World } = require('picoes')\n\n// Create a world to store entities in\nlet world = new World()\n\n// Create player with anonymous health component\nlet player = world.entity().set('health', { value: 100 })\n\n// Create enemies\nworld.entity().set('damages', 10)\nworld.entity().set('damages', 30)\n\n// Apply damage\nworld.every(['damages'], amount => {\n\tplayer.get('health').value -= amount\n})\n\n// Player now has reduced health\nconsole.assert(player.get('health').value === 60)\n```\n\n#### Full component and system definitions\n\n```javascript\n// import { World } from 'picoes'\nconst { World } = require('picoes')\n\n// Create a world to store entities in\nlet world = new World()\n\n// Define position and velocity components\nworld.component('position', class {\n\tconstructor(entity, x = 0, y = 0) {\n\t\tthis.x = x\n\t\tthis.y = y\n\t}\n})\n\nworld.component('velocity', class {\n\tconstructor(entity, x = 0, y = 0) {\n\t\tthis.x = x\n\t\tthis.y = y\n\t}\n})\n\n// Create movable prototype\nworld.prototype({\n\tMovable: {\n\t\tposition: {},\n\t\tvelocity: {}\n\t}\n})\n\n// Define movement system\n// Note: All system methods are optional, but they are included here to show the flow\nworld.system(['position', 'velocity'], class {\n\tconstructor() {\n\t\tconsole.log('constructor() called')\n\t}\n\n\tinitialize() {\n\t\tconsole.log('initialize() called')\n\t}\n\n\tpre() {\n\t\tconsole.log('pre() called')\n\t}\n\n\tevery(position, velocity, entity) {\n\t\tconsole.log(`every() called for entity ${entity.id}`)\n\t\tposition.x += velocity.x\n\t\tposition.y += velocity.y\n\t}\n\n\tpost() {\n\t\tconsole.log('post() called')\n\t}\n})\n\n// Create entity without prototype\nlet entityA = world.entity().set('position').set('velocity')\nconsole.assert(entityA.has('position'))\nconsole.assert(entityA.has('velocity'))\n\n// Create entity with prototype (results are the same as above)\nlet entityB = world.entity('Movable')\nconsole.assert(entityB.has('position'))\nconsole.assert(entityB.has('velocity'))\n\n// This will re-create the component using the constructor\nentityB.set('position', 100, 100)\n\n// This set a property in the existing component\nentityA.get('position').x = 100\n\n// Set velocities by using update()\nentityA.update('velocity', { x: 10, y: 10 })\nentityB.update('velocity', { x: -10, y: -10 })\n\n// Initialize systems\nworld.initialize()\n\n// Run systems\nworld.run()\n\n// Since the movement system ran once, the positions changed by the amount of their velocity\nconsole.assert(entityA.get('position').x === 110)\nconsole.assert(entityA.get('position').y === 10)\nconsole.assert(entityB.get('position').x === 90)\nconsole.assert(entityB.get('position').y === 90)\n```\n\nExpected output:\n\n```\nconstructor() called\ninitialize() called\npre() called\nevery() called for entity 1\nevery() called for entity 2\npost() called\n```\n",
    "longname": "/srv/http/picoes/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"picoes\",\n  \"version\": \"0.3.0\",\n  \"description\": \"Pico Entity System for JavaScript (ES6).\",\n  \"main\": \"./index.js\",\n  \"scripts\": {\n    \"test\": \"node ./node_modules/.bin/istanbul cover _mocha -- -R spec\",\n    \"doc\": \"node ./node_modules/.bin/esdoc\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/ayebear/picoes.git\"\n  },\n  \"keywords\": [\n    \"entity\",\n    \"component\",\n    \"system\",\n    \"ecs\",\n    \"picoes\",\n    \"es6\"\n  ],\n  \"author\": \"Eric Hebert\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/ayebear/picoes/issues\"\n  },\n  \"homepage\": \"https://github.com/ayebear/picoes#readme\",\n  \"devDependencies\": {\n    \"chai\": \"^4.1.2\",\n    \"istanbul\": \"^0.4.5\",\n    \"mocha\": \"^5.0.5\"\n  },\n  \"dependencies\": {\n    \"esdoc\": \"^1.0.4\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-flow-type-plugin\": \"^1.0.1\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"esdoc-undocumented-identifier-plugin\": \"^1.0.0\",\n    \"esdoc-unexported-identifier-plugin\": \"^1.0.0\",\n    \"marked\": \"^0.3.9\"\n  }\n}\n",
    "longname": "/srv/http/picoes/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]